services:

  db-provider:
    container_name: db-provider
    image: "postgres"
    restart: always
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: ds-protocol-provider
      POSTGRES_USER: ds-protocol-provider
      POSTGRES_DB: ds-protocol-provider

  ds-provider:
    container_name: ds-provider
    image: caparicioesd/rainbow:latest
    platform: linux/arm64/v8
    restart: on-failure
    depends_on:
      - db-provider
    ports:
      - "1234:1234"
    env_file:
      - "docker-provider/.env.provider.template"
    command: [ "provider", "start" ]

  ds-provider-setup:
    container_name: ds-provider-setup
    image: caparicioesd/rainbow:latest
    platform:  linux/arm64/v8
    restart: on-failure
    depends_on:
      - db-provider
    env_file:
      - "docker-provider/.env.provider.template"
    command: [ "provider", "setup" ]

  db-consumer:
    container_name: db-consumer
    image: "postgres"
    restart: always
    ports:
      - "5434:5432"
    environment:
      POSTGRES_PASSWORD: ds-protocol-consumer
      POSTGRES_USER: ds-protocol-consumer
      POSTGRES_DB: ds-protocol-consumer

  ds-consumer:
    container_name: ds-consumer
    image: caparicioesd/rainbow:latest
    platform:  linux/arm64/v8
    restart: on-failure
    depends_on:
      - db-consumer
    ports:
      - "1235:1235"
    env_file:
      - "docker-consumer/.env.consumer.template"
    command: [ "consumer", "start" ]

  ds-consumer-setup:
    container_name: ds-consumer-setup
    image: caparicioesd/rainbow:latest
    platform:  linux/arm64/v8
    restart: on-failure
    depends_on:
      - db-consumer
    env_file:
      - "docker-consumer/.env.consumer.template"
    command: [ "consumer", "setup" ]

  streaming-testing-service:
    container_name: streaming-testing-service
    image: caparicioesd/rainbow-test-srv:latest
    platform:  linux/arm64/v8
    restart: always
    ports:
      - "1237:1237"

  fiware-orion:
    image: fiware/orion
    ports:
      - "1026:1026"
    command: -logLevel INFO -noCache -dbURI mongodb://mongo:27017
    depends_on:
      - mongo
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://0.0.0.0:1026/version" ]
      interval: 1m
      timeout: 10s
      retries: 3
    extra_hosts:
      - "host.docker.internal:host-gateway"

  mongo:
    image: mongo
    ports:
      - "27017:27017"

  streaming-service:
    image: caparicioesd/rainbow-testing-streaming
    platform:  linux/arm64/v8
    environment:
      CONTEXT_BROKER_URL: fiware-orion
      CONTEXT_BROKER_HOST: 1026
    entrypoint: ["sh", "-c", "sleep 4 && ./fiware-streaming-service.sh"]

  api-test:
    image: svenwal/jsonplaceholder
    ports:
      - "3000:3000"

  rest-api-service:
    build:
      context: ./rest-api-service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./data:/data

  rest-api-backend:
    build:
      context: ./rest-api-backend
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    volumes:
      - ./rest-api-backend/data:/data
